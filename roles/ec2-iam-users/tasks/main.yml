---
# tasks file for ec2-iam-users

- name: Enable the epel-release repo
  yum:
    name: epel-release
    state: present
  ignore_errors: true
  register: epel_repo

- name: Fallback for epel-release on Amazon Linux
  command: amazon-linux-extras install -y epel
  when: epel_repo is failed

- name: Assure essential system packages are installed
  yum:
    name:
      - jq
      - openssh-server
      - python-pip
      - util-linux
    state: present

- name: Assure essential PIP packages are installed
  pip:
    name:
      - awscli

- name: Enable fetching the public keys from IAM
  template:
    src: "fetch-public-keys-from-iam.sh"
    dest: "/usr/bin/fetch-public-keys-from-iam"
    mode: 0755

- name: Authorize SSH via IAM public keys
  template:
    src: "ssh-authorize-via-iam.sh"
    dest: "/usr/bin/ssh-authorize-via-iam"
    mode: 0755

- name: Copy the pre-auth banner
  copy:
    src: issue.net
    dest: /etc/issue.net
    mode: 0644

- name: Copy the sshd_config file
  template:
    src: sshd_config
    dest: /etc/ssh/sshd_config
    mode: 0644
  register: sshd_config

- name: Create the host RSA key
  command: ssh-keygen -b 2048 -t rsa -f {{ host_key_path | quote }} -q -N ""
  args:
    creates: "{{ host_key_path }}"

- name: Create the group for the IAM users
  group:
    name: "{{ item }}"
    state: present
  with_items: "{{ ssh_user_groups }}"

- name: Create the remote user
  user:
    name: "{{ ssh_username }}"
    groups: "{{ ssh_user_groups }}"
    append: true
    create_home: true
    state: present

- name: Creating the privilege separation directory
  file:
    path: "/var/run/sshd"
    state: directory

- name: Test the configuration file
  command: sshd -t
  when: sshd_config is changed

- name: Restart the SSH service if needed
  service:
    name: sshd
    state: reloaded
  when: sshd_config is changed and 'no-systemd' not in group_names
